# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `phlex` gem.
# Please instead update this file by running `bin/tapioca gem phlex`.


class Object < ::BasicObject
  include ::Kernel
  include ::PP::ObjectMixin

  private

  # source://phlex//lib/phlex.rb#56
  def ðŸ’ª; end
end

# source://phlex//lib/phlex.rb#5
module Phlex; end

# @api private
#
# source://phlex//lib/phlex.rb#43
Phlex::ATTRIBUTE_CACHE = T.let(T.unsafe(nil), Hash)

# A specialised ArgumentError for Phlex.
#
# source://phlex//lib/phlex.rb#33
class Phlex::ArgumentError < ::ArgumentError
  include ::Phlex::Error
end

# @api private
#
# source://phlex//lib/phlex/black_hole.rb#4
module Phlex::BlackHole
  extend ::Phlex::BlackHole

  # @api private
  #
  # source://phlex//lib/phlex/black_hole.rb#7
  def <<(anything); end

  # @api private
  #
  # source://phlex//lib/phlex/black_hole.rb#11
  def bytesize; end

  # @api private
  #
  # source://phlex//lib/phlex/black_hole.rb#19
  def clear; end

  # @api private
  #
  # source://phlex//lib/phlex/black_hole.rb#15
  def dup; end
end

# source://phlex//lib/phlex/csv.rb#3
class Phlex::CSV
  include ::Phlex::Callable

  # @return [CSV] a new instance of CSV
  #
  # source://phlex//lib/phlex/csv.rb#9
  def initialize(collection); end

  # source://phlex//lib/phlex/csv.rb#20
  def call(buffer = T.unsafe(nil), view_context: T.unsafe(nil)); end

  # Returns the value of attribute collection.
  #
  # source://phlex//lib/phlex/csv.rb#18
  def collection; end

  # source://phlex//lib/phlex/csv.rb#70
  def content_type; end

  # source://phlex//lib/phlex/csv.rb#66
  def filename; end

  private

  # source://phlex//lib/phlex/csv.rb#76
  def column(header = T.unsafe(nil), value); end

  # source://phlex//lib/phlex/csv.rb#87
  def each_item(&block); end

  # source://phlex//lib/phlex/csv.rb#118
  def escape(value); end

  # Override and set to `false` to disable CSV injection escapes or `true` to enable.
  #
  # @return [Boolean]
  #
  # source://phlex//lib/phlex/csv.rb#110
  def escape_csv_injection?; end

  # source://phlex//lib/phlex/csv.rb#114
  def helpers; end

  # Override and set to `false` to disable rendering headers.
  #
  # @return [Boolean]
  #
  # source://phlex//lib/phlex/csv.rb#100
  def render_headers?; end

  # source://phlex//lib/phlex/csv.rb#95
  def template(*_arg0, **_arg1, &_arg2); end

  # Override and set to `true` to strip leading and trailing whitespace from values.
  #
  # @return [Boolean]
  #
  # source://phlex//lib/phlex/csv.rb#105
  def trim_whitespace?; end

  # @yield [record]
  #
  # source://phlex//lib/phlex/csv.rb#91
  def yielder(record); end
end

# source://phlex//lib/phlex/csv.rb#6
Phlex::CSV::FORMULA_PREFIXES = T.let(T.unsafe(nil), Hash)

# source://phlex//lib/phlex/csv.rb#7
Phlex::CSV::SPACE_CHARACTERS = T.let(T.unsafe(nil), Hash)

# @api private
#
# source://phlex//lib/phlex/callable.rb#4
module Phlex::Callable
  # @api private
  #
  # source://phlex//lib/phlex/callable.rb#5
  def to_proc; end
end

# @api private
#
# source://phlex//lib/phlex/context.rb#4
class Phlex::Context
  # @api private
  # @return [Context] a new instance of Context
  #
  # source://phlex//lib/phlex/context.rb#5
  def initialize(user_context = T.unsafe(nil)); end

  # @api private
  #
  # source://phlex//lib/phlex/context.rb#27
  def around_render; end

  # @api private
  #
  # source://phlex//lib/phlex/context.rb#36
  def begin_target(id); end

  # @api private
  #
  # source://phlex//lib/phlex/context.rb#14
  def buffer; end

  # @api private
  #
  # source://phlex//lib/phlex/context.rb#14
  def buffer=(_arg0); end

  # @api private
  #
  # source://phlex//lib/phlex/context.rb#14
  def capturing; end

  # @api private
  #
  # source://phlex//lib/phlex/context.rb#14
  def capturing=(_arg0); end

  # @api private
  #
  # source://phlex//lib/phlex/context.rb#46
  def capturing_into(new_buffer); end

  # @api private
  #
  # source://phlex//lib/phlex/context.rb#40
  def end_target; end

  # @api private
  #
  # source://phlex//lib/phlex/context.rb#16
  def fragments; end

  # @api private
  #
  # source://phlex//lib/phlex/context.rb#14
  def in_target_fragment; end

  # @api private
  #
  # source://phlex//lib/phlex/context.rb#14
  def in_target_fragment=(_arg0); end

  # Added for backwards compatibility with phlex-rails. We can remove this with 2.0
  #
  # @api private
  #
  # source://phlex//lib/phlex/context.rb#19
  def target; end

  # @api private
  #
  # source://phlex//lib/phlex/context.rb#23
  def target_fragments(fragments); end

  # @api private
  #
  # source://phlex//lib/phlex/context.rb#14
  def user_context; end

  # @api private
  #
  # source://phlex//lib/phlex/context.rb#14
  def user_context=(_arg0); end
end

# Include this module into an {HTML} or {SVG} component to make it yield the content block before calling {#template}.
#
# @example
#   class Tabs < Phlex::HTML
#   include DeferredRender
#
#   Tab = Data.define(:name, :content)
#
#   def initialize
#   @tabs = []
#   end
#
#   def view_template
#   @tabs.each { |t| a { t.name } }
#   @tabs.each { |t| article(&t.content) }
#   end
#
#   def tab(name, &content)
#   @tabs << Tab.new(name, content)
#   end
#   end
#
# source://phlex//lib/phlex/deferred_render.rb#23
module Phlex::DeferredRender; end

# @api private
#
# source://phlex//lib/phlex/element_clobbering_guard.rb#4
module Phlex::ElementClobberingGuard
  # @api private
  #
  # source://phlex//lib/phlex/element_clobbering_guard.rb#5
  def method_added(method_name); end
end

# Extending this module provides the {register_element} macro for registering your own custom elements. It's already extended by {HTML} and {SVG}.
#
# @example
#   module MyCustomElements
#   extend Phlex::Elements
#
#   register_element :trix_editor
#   end
#
#   class MyComponent < Phlex::HTML
#   include MyCustomElements
#
#   def view_template
#   trix_editor
#   end
#   end
#
# source://phlex//lib/phlex/elements.rb#18
module Phlex::Elements
  # Register a custom element. This macro defines an element method for the current class and descendents only. There is no global element registry.
  #
  # @example Register the custom element `<trix-editor>`
  #   register_element :trix_editor
  # @note The methods defined by this macro depend on other methods from {SGML} so they should always be mixed into an {HTML} or {SVG} component.
  # @param method_name [Symbol]
  # @param tag [String] the name of the tag, otherwise this will be the method name with underscores replaced with dashes.
  # @return [Symbol] the name of the method created
  #
  # source://phlex//lib/phlex/elements.rb#31
  def register_element(method_name, tag: T.unsafe(nil), deprecated: T.unsafe(nil)); end

  # @api private
  #
  # source://phlex//lib/phlex/elements.rb#101
  def register_void_element(method_name, tag: T.unsafe(nil), deprecated: T.unsafe(nil)); end

  # @api private
  #
  # source://phlex//lib/phlex/elements.rb#20
  def registered_elements; end
end

# Included in all Phlex exceptions allowing you to match any Phlex error.
#
# @example Rescue any Phlex error:
#   rescue Phlex::Error
#
# source://phlex//lib/phlex.rb#24
module Phlex::Error; end

# source://phlex//lib/phlex.rb#27
Phlex::Escape = ERB::Escape

# @abstract Subclass and define {#template} to create an HTML component class.
#
# source://phlex//lib/phlex/html.rb#5
class Phlex::HTML < ::Phlex::SGML
  include ::Phlex::HTML::StandardElements
  include ::Phlex::HTML::VoidElements
  extend ::Phlex::Elements
  extend ::Phlex::ElementClobberingGuard

  # source://phlex//lib/phlex/html.rb#59
  def content_type; end

  # Output an HTML doctype.
  #
  # source://phlex//lib/phlex/html.rb#31
  def doctype; end

  # source://phlex//lib/phlex/html.rb#55
  def filename; end

  # Outputs an `<svg>` tag
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/svg
  #
  # source://phlex//lib/phlex/html.rb#42
  def svg(*_arg0, **_arg1, &_arg2); end

  # @api private
  #
  # source://phlex//lib/phlex/html.rb#51
  def unbuffered; end

  class << self
    # @api private
    #
    # source://phlex//lib/phlex/html.rb#16
    def __unbuffered_class__; end
  end
end

# A list of HTML attributes that have the potential to execute unsafe JavaScript.
#
# source://phlex//lib/phlex/html.rb#10
Phlex::HTML::EVENT_ATTRIBUTES = T.let(T.unsafe(nil), Hash)

# Standard HTML elements accept content and always have a closing tag.
#
# source://phlex//lib/phlex/html/standard_elements.rb#4
module Phlex::HTML::StandardElements
  extend ::Phlex::Elements

  # source://phlex//lib/phlex/elements.rb#43
  def _a(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _abbr(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _address(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _article(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _aside(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _audio(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _b(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _base(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _bdi(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _bdo(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _blockquote(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _body(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _button(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _canvas(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _caption(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _cite(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _code(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _colgroup(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _data(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _datalist(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _dd(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _del(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _details(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _dfn(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _dialog(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _div(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _dl(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _dt(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _em(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _fieldset(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _figcaption(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _figure(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _footer(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _form(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _h1(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _h2(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _h3(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _h4(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _h5(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _h6(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _head(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _header(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _hgroup(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _html(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _i(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _iframe(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _ins(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _kbd(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _label(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _legend(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _li(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _main(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _map(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _mark(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _menu(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _meter(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _nav(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _noscript(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _object(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _ol(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _optgroup(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _option(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _output(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _p(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _picture(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _portal(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _pre(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _progress(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _q(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _rp(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _rt(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _ruby(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _s(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _samp(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _script(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _search(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _section(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _select(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _slot(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _small(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _span(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _strong(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _style(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _sub(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _summary(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _sup(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _svg(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _table(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _tbody(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _td(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _template_tag(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _textarea(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _tfoot(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _th(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _thead(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _time(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _title(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _tr(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _u(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _ul(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _var(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _video(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _wbr(**attributes, &block); end

  # Outputs an `<a>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/a
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def a(**attributes, &block); end

  # Outputs an `<abbr>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/abbr
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def abbr(**attributes, &block); end

  # Outputs an `<address>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/address
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def address(**attributes, &block); end

  # Outputs an `<article>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/article
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def article(**attributes, &block); end

  # Outputs an `<aside>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/aside
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def aside(**attributes, &block); end

  # Outputs an `<audio>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def audio(**attributes, &block); end

  # Outputs a `<b>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/b
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def b(**attributes, &block); end

  # Outputs a `<base>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def base(**attributes, &block); end

  # Outputs a `<bdi>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/bdi
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def bdi(**attributes, &block); end

  # Outputs a `<bdo>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/bdo
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def bdo(**attributes, &block); end

  # Outputs a `<blockquote>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/blockquote
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def blockquote(**attributes, &block); end

  # Outputs a `<body>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/body
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def body(**attributes, &block); end

  # Outputs a `<button>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/button
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def button(**attributes, &block); end

  # Outputs a `<canvas>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/canvas
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def canvas(**attributes, &block); end

  # Outputs a `<caption>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/caption
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def caption(**attributes, &block); end

  # Outputs a `<cite>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/cite
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def cite(**attributes, &block); end

  # Outputs a `<code>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/code
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def code(**attributes, &block); end

  # Outputs a `<colgroup>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/colgroup
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def colgroup(**attributes, &block); end

  # Outputs a `<data>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/data
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def data(**attributes, &block); end

  # Outputs a `<datalist>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/datalist
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def datalist(**attributes, &block); end

  # Outputs a `<dd>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/dd
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def dd(**attributes, &block); end

  # Outputs a `<del>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/del
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def del(**attributes, &block); end

  # Outputs a `<details>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/details
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def details(**attributes, &block); end

  # Outputs a `<dfn>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/dfn
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def dfn(**attributes, &block); end

  # Outputs a `<dialog>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/dialog
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def dialog(**attributes, &block); end

  # Outputs a `<div>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/div
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def div(**attributes, &block); end

  # Outputs a `<dl>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/dl
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def dl(**attributes, &block); end

  # Outputs a `<dt>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/dt
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def dt(**attributes, &block); end

  # Outputs an `<em>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/em
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def em(**attributes, &block); end

  # Outputs a `<fieldset>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/fieldset
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def fieldset(**attributes, &block); end

  # Outputs a `<figcaption>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/figcaption
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def figcaption(**attributes, &block); end

  # Outputs a `<figure>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/figure
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def figure(**attributes, &block); end

  # Outputs a `<footer>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/footer
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def footer(**attributes, &block); end

  # Outputs a `<form>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/form
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def form(**attributes, &block); end

  # Outputs an `<h1>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/h1
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def h1(**attributes, &block); end

  # Outputs an `<h2>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/h2
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def h2(**attributes, &block); end

  # Outputs an `<h3>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/h3
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def h3(**attributes, &block); end

  # Outputs an `<h4>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/h4
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def h4(**attributes, &block); end

  # Outputs an `<h5>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/h5
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def h5(**attributes, &block); end

  # Outputs an `<h6>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/h6
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def h6(**attributes, &block); end

  # Outputs a `<head>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/head
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def head(**attributes, &block); end

  # Outputs a `<header>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/header
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def header(**attributes, &block); end

  # Outputs an `<hgroup>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/hgroup
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def hgroup(**attributes, &block); end

  # Outputs an `<html>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/html
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def html(**attributes, &block); end

  # Outputs an `<i>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/i
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def i(**attributes, &block); end

  # Outputs an `<iframe>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/iframe
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def iframe(**attributes, &block); end

  # Outputs an `<ins>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/ins
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def ins(**attributes, &block); end

  # Outputs a `<kbd>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/kbd
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def kbd(**attributes, &block); end

  # Outputs a `<label>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/label
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def label(**attributes, &block); end

  # Outputs a `<legend>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/legend
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def legend(**attributes, &block); end

  # Outputs a `<li>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/li
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def li(**attributes, &block); end

  # Outputs a `<main>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/main
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def main(**attributes, &block); end

  # Outputs a `<map>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/map
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def map(**attributes, &block); end

  # Outputs a `<mark>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/mark
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def mark(**attributes, &block); end

  # Outputs a `<menu>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menu
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def menu(**attributes, &block); end

  # Outputs a `<meter>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/meter
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def meter(**attributes, &block); end

  # Outputs a `<nav>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/nav
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def nav(**attributes, &block); end

  # Outputs a `<noscript>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/noscript
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def noscript(**attributes, &block); end

  # Outputs an `<object>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/object
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def object(**attributes, &block); end

  # Outputs an `<ol>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/ol
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def ol(**attributes, &block); end

  # Outputs an `<optgroup>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/optgroup
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def optgroup(**attributes, &block); end

  # Outputs an `<option>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/option
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def option(**attributes, &block); end

  # Outputs an `<output>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/output
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def output(**attributes, &block); end

  # Outputs a `<p>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/p
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def p(**attributes, &block); end

  # Outputs a `<picture>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/picture
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def picture(**attributes, &block); end

  # Outputs a `<portal>` tag. (Experimental)
  #
  # @return [nil]
  # @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/portal
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def portal(**attributes, &block); end

  # Outputs a `<pre>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/pre
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def pre(**attributes, &block); end

  # Outputs a `<progress>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/progress
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def progress(**attributes, &block); end

  # Outputs a `<q>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/q
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def q(**attributes, &block); end

  # Outputs an `<rp>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/rp
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def rp(**attributes, &block); end

  # Outputs an `<rt>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/rt
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def rt(**attributes, &block); end

  # Outputs a `<ruby>` tag. (The best tag ever!)
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/ruby
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def ruby(**attributes, &block); end

  # Outputs an `<s>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/s
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def s(**attributes, &block); end

  # Outputs a `<samp>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/samp
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def samp(**attributes, &block); end

  # Outputs a `<script>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/script
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def script(**attributes, &block); end

  # Outputs a `<search>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/search
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def search(**attributes, &block); end

  # Outputs a `<section>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/section
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def section(**attributes, &block); end

  # Outputs a `<select>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/select
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def select(**attributes, &block); end

  # Outputs a `<slot>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/slot
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def slot(**attributes, &block); end

  # Outputs a `<small>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/small
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def small(**attributes, &block); end

  # Outputs a `<span>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/span
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def span(**attributes, &block); end

  # Outputs a `<strong>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/strong
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def strong(**attributes, &block); end

  # Outputs a `<style>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/style
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def style(**attributes, &block); end

  # Outputs a `<sub>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/sub
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def sub(**attributes, &block); end

  # Outputs a `<summary>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/summary
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def summary(**attributes, &block); end

  # Outputs a `<sup>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/sup
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def sup(**attributes, &block); end

  # Outputs an `<svg>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def svg(**attributes, &block); end

  # Outputs a `<table>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/table
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def table(**attributes, &block); end

  # Outputs a `<tbody>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/tbody
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def tbody(**attributes, &block); end

  # Outputs a `<td>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/td
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def td(**attributes, &block); end

  # Outputs a `<template>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/template
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def template_tag(**attributes, &block); end

  # Outputs a `<textarea>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/textarea
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def textarea(**attributes, &block); end

  # Outputs a `<tfoot>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/tfoot
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def tfoot(**attributes, &block); end

  # Outputs a `<th>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/th
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def th(**attributes, &block); end

  # Outputs a `<thead>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/thead
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def thead(**attributes, &block); end

  # Outputs a `<time>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/time
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def time(**attributes, &block); end

  # Outputs a `<title>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/title
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def title(**attributes, &block); end

  # Outputs a `<tr>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/tr
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def tr(**attributes, &block); end

  # Outputs a `<u>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/u
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def u(**attributes, &block); end

  # Outputs a `<ul>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/ul
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def ul(**attributes, &block); end

  # Outputs a `<var>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/var
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def var(**attributes, &block); end

  # Outputs a `<video>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/video
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def video(**attributes, &block); end

  # Outputs a `<wbr>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/wbr
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def wbr(**attributes, &block); end
end

# source://phlex//lib/phlex/html.rb#12
Phlex::HTML::UNBUFFERED_MUTEX = T.let(T.unsafe(nil), Thread::Mutex)

# Void HTML elements don't accept content and never have a closing tag.
#
# source://phlex//lib/phlex/html/void_elements.rb#4
module Phlex::HTML::VoidElements
  extend ::Phlex::Elements

  # source://phlex//lib/phlex/elements.rb#113
  def _area(**attributes); end

  # source://phlex//lib/phlex/elements.rb#113
  def _br(**attributes); end

  # source://phlex//lib/phlex/elements.rb#113
  def _col(**attributes); end

  # source://phlex//lib/phlex/elements.rb#113
  def _embed(**attributes); end

  # source://phlex//lib/phlex/elements.rb#113
  def _hr(**attributes); end

  # source://phlex//lib/phlex/elements.rb#113
  def _img(**attributes); end

  # source://phlex//lib/phlex/elements.rb#113
  def _input(**attributes); end

  # source://phlex//lib/phlex/elements.rb#113
  def _link(**attributes); end

  # source://phlex//lib/phlex/elements.rb#113
  def _meta(**attributes); end

  # source://phlex//lib/phlex/elements.rb#113
  def _param(**attributes); end

  # source://phlex//lib/phlex/elements.rb#113
  def _source(**attributes); end

  # source://phlex//lib/phlex/elements.rb#113
  def _track(**attributes); end

  # Outputs an `<area>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/area
  #
  # source://phlex//lib/phlex/elements.rb#113
  def area(**attributes); end

  # Outputs a `<br>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/br
  #
  # source://phlex//lib/phlex/elements.rb#113
  def br(**attributes); end

  # Outputs a `<col>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/col
  #
  # source://phlex//lib/phlex/elements.rb#113
  def col(**attributes); end

  # Outputs an `<embed>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/embed
  #
  # source://phlex//lib/phlex/elements.rb#113
  def embed(**attributes); end

  # Outputs an `<hr>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/hr
  #
  # source://phlex//lib/phlex/elements.rb#113
  def hr(**attributes); end

  # Outputs an `<img>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/img
  #
  # source://phlex//lib/phlex/elements.rb#113
  def img(**attributes); end

  # Outputs an `<input>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/input
  #
  # source://phlex//lib/phlex/elements.rb#113
  def input(**attributes); end

  # Outputs a `<link>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/link
  #
  # source://phlex//lib/phlex/elements.rb#113
  def link(**attributes); end

  # Outputs a `<meta>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/meta
  #
  # source://phlex//lib/phlex/elements.rb#113
  def meta(**attributes); end

  # Outputs a `<param>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/param
  #
  # source://phlex//lib/phlex/elements.rb#113
  def param(**attributes); end

  # Outputs a `<source>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/source
  #
  # source://phlex//lib/phlex/elements.rb#113
  def source(**attributes); end

  # Outputs a `<track>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/track
  #
  # source://phlex//lib/phlex/elements.rb#113
  def track(**attributes); end
end

# source://phlex//lib/phlex/helpers.rb#5
module Phlex::Helpers
  private

  # @api private
  #
  # source://phlex//lib/phlex/helpers.rb#50
  def __append_token__(tokens, token); end

  # Like {#tokens} but returns a {Hash} where the tokens are the value for `:class`.
  #
  # @return [Hash]
  #
  # source://phlex//lib/phlex/helpers.rb#63
  def classes(*tokens, **conditional_tokens); end

  # @return [Hash]
  #
  # source://phlex//lib/phlex/helpers.rb#74
  def mix(*args); end

  # Tokens
  #
  # @example With Proc conditions
  #   tokens(
  #   -> { true } => "a",
  #   -> { false } => "b"
  #   )
  # @example With method conditions
  #   tokens(
  #   active?: "active"
  #   )
  # @example With else condition
  #   tokens(
  #   active?: { then: "active", else: "inactive" }
  #   )
  # @return [String]
  #
  # source://phlex//lib/phlex/helpers.rb#23
  def tokens(*tokens, **conditional_tokens); end
end

# source://phlex//lib/phlex/kit.rb#3
module Phlex::Kit
  include ::Phlex::Kit::LazyLoader

  # source://phlex//lib/phlex/kit.rb#34
  def __get_phlex_kit_constant__(name); end

  # source://phlex//lib/phlex/kit.rb#30
  def __phlex_kit_constants__; end

  # source://phlex//lib/phlex/kit.rb#38
  def const_added(name); end

  class << self
    # @private
    #
    # source://phlex//lib/phlex/kit.rb#24
    def extended(mod); end
  end
end

# source://phlex//lib/phlex/kit.rb#4
module Phlex::Kit::LazyLoader
  # source://phlex//lib/phlex/kit.rb#5
  def method_missing(name, *args, **kwargs, &block); end

  private

  # @return [Boolean]
  #
  # source://phlex//lib/phlex/kit.rb#13
  def respond_to_missing?(name, include_private = T.unsafe(nil)); end
end

# A specialised NameError for Phlex.
#
# source://phlex//lib/phlex.rb#38
class Phlex::NameError < ::NameError
  include ::Phlex::Error
end

# **Standard Generalized Markup Language** for behaviour common to {HTML} and {SVG}.
#
# source://phlex//lib/phlex/sgml.rb#5
class Phlex::SGML
  include ::Phlex::Helpers

  # @api private
  #
  # source://phlex//lib/phlex/sgml.rb#103
  def __final_call__(buffer = T.unsafe(nil), context: T.unsafe(nil), view_context: T.unsafe(nil), parent: T.unsafe(nil), fragments: T.unsafe(nil), &block); end

  # source://phlex//lib/phlex/sgml.rb#82
  def await(task); end

  # Renders the view and returns the buffer. The default buffer is a mutable String.
  #
  # source://phlex//lib/phlex/sgml.rb#96
  def call(*_arg0, **_arg1, &_arg2); end

  # Capture a block of output as a String.
  #
  # @note This only works if the block's receiver is the current component or the block returns a String.
  # @return [String]
  #
  # source://phlex//lib/phlex/sgml.rb#224
  def capture(*args, &block); end

  # Output an HTML comment.
  #
  # @return [nil]
  #
  # source://phlex//lib/phlex/sgml.rb#195
  def comment(&block); end

  # Access the current render context data
  #
  # @return the supplied context object, by default a Hash
  #
  # source://phlex//lib/phlex/sgml.rb#158
  def context; end

  # Output text content. The text will be HTML-escaped.
  #
  # @param content [String, Symbol, Integer, void] the content to be output on the buffer. Strings, Symbols, and Integers are handled by `plain` directly, but any object can be handled by overriding `format_object`
  # @return [nil]
  # @see #format_object
  #
  # source://phlex//lib/phlex/sgml.rb#166
  def plain(content); end

  # @abstract Override to define a template for your component.
  # @example
  #   def view_template
  #   h1 { "ðŸ‘‹ Hello World!" }
  #   end
  # @example Your template may yield a content block.
  #   def view_template
  #   main {
  #   h1 { "Hello World" }
  #   yield
  #   }
  #   end
  # @example Alternatively, you can delegate the content block to an element.
  #   def view_template(&block)
  #   article(class: "card", &block)
  #   end
  #
  # source://phlex//lib/phlex/sgml.rb#68
  def template; end

  # This method is very dangerous and should usually be avoided. It will output the given String without any HTML safety. You should never use this method to output unsafe user input.
  #
  # @param content [String|nil]
  # @return [nil]
  #
  # source://phlex//lib/phlex/sgml.rb#211
  def unsafe_raw(content = T.unsafe(nil)); end

  # source://phlex//lib/phlex/sgml.rb#78
  def view_template(&block); end

  # Output a whitespace character. This is useful for getting inline elements to wrap. If you pass a block, a whitespace will be output before and after yielding the block.
  #
  # @return [nil]
  # @yield If a block is given, it yields the block with no arguments.
  #
  # source://phlex//lib/phlex/sgml.rb#177
  def whitespace(&block); end

  private

  # @api private
  #
  # source://phlex//lib/phlex/sgml.rb#406
  def __attributes__(**attributes); end

  # @api private
  #
  # source://phlex//lib/phlex/sgml.rb#425
  def __build_attributes__(attributes, buffer:); end

  # @api private
  #
  # source://phlex//lib/phlex/sgml.rb#413
  def __final_attributes__(**attributes); end

  # Performs the same task as the public method #plain, but does not raise an error if an unformattable object is passed
  #
  # @api private
  #
  # source://phlex//lib/phlex/sgml.rb#383
  def __text__(content); end

  # Like {#capture} but the output is vanished into a BlackHole buffer.
  # Because the BlackHole does nothing with the output, this should be faster.
  #
  # @api private
  # @return [nil]
  #
  # source://phlex//lib/phlex/sgml.rb#290
  def __vanish__(*args); end

  # @abstract Override this method to hook in right after a template is rendered. Please remember to call `super` so that callbacks can be added at different layers of the inheritance tree.
  # @return [nil]
  #
  # source://phlex//lib/phlex/sgml.rb#333
  def after_template; end

  # @abstract Override this method to hook in around a template render. You can do things before and after calling `super` to render the template. You should always call `super` so that callbacks can be added at different layers of the inheritance tree.
  # @return [nil]
  #
  # source://phlex//lib/phlex/sgml.rb#317
  def around_template; end

  # @abstract Override this method to hook in right before a template is rendered. Please remember to call `super` so that callbacks can be added at different layers of the inheritance tree.
  # @return [nil]
  #
  # source://phlex//lib/phlex/sgml.rb#327
  def before_template; end

  # @api private
  #
  # source://phlex//lib/phlex/sgml.rb#237
  def flush; end

  # Format the object for output
  #
  # @abstract Override to define your own format handling for different object types. Please remember to call `super` in the case that the passed object doesn't match, so that object formatting can be added at different layers of the inheritance tree.
  # @return [String]
  #
  # source://phlex//lib/phlex/sgml.rb#308
  def format_object(object); end

  # Render another component, block or enumerable
  #
  # @overload render
  # @overload render
  # @overload render
  # @overload render
  # @return [nil]
  #
  # source://phlex//lib/phlex/sgml.rb#261
  def render(renderable, &block); end

  # Determines if the component should render. By default, it returns `true`.
  #
  # @abstract Override to define your own predicate to prevent rendering.
  # @return [Boolean]
  #
  # source://phlex//lib/phlex/sgml.rb#301
  def render?; end

  # Yields the block and checks if it buffered anything. If nothing was buffered, the return value is treated as text. The text is always HTML-escaped.
  #
  # @return [nil]
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/sgml.rb#340
  def yield_content; end

  # Same as {#yield_content} but accepts a splat of arguments to yield. This is slightly slower than {#yield_content}.
  #
  # @return [nil]
  # @yield [*args] Yields the given arguments.
  #
  # source://phlex//lib/phlex/sgml.rb#369
  def yield_content_with_args(*args); end

  # Same as {#yield_content} but yields no arguments.
  #
  # @yield Yields the block with no arguments.
  #
  # source://phlex//lib/phlex/sgml.rb#354
  def yield_content_with_no_args; end

  class << self
    # Render the view to a String. Arguments are delegated to {.new}.
    #
    # source://phlex//lib/phlex/sgml.rb#10
    def call(*_arg0, **_arg1, &_arg2); end

    # @api private
    # @return [Boolean]
    #
    # source://phlex//lib/phlex/sgml.rb#33
    def element_method?(method_name); end

    # @private
    #
    # source://phlex//lib/phlex/sgml.rb#72
    def method_added(method_name); end

    # Create a new instance of the component.
    #
    # @note The block will not be delegated {#initialize}. Instead, it will be sent to {#template} when rendering.
    #
    # source://phlex//lib/phlex/sgml.rb#16
    def new(*args, **kwargs, &block); end

    # @api private
    #
    # source://phlex//lib/phlex/sgml.rb#27
    def rendered_at_least_once!; end
  end
end

# source://phlex//lib/phlex.rb#45
Phlex::SUPPORTS_FIBER_STORAGE = T.let(T.unsafe(nil), TrueClass)

# source://phlex//lib/phlex/svg.rb#4
class Phlex::SVG < ::Phlex::SGML
  include ::Phlex::SVG::StandardElements
  extend ::Phlex::ElementClobberingGuard

  # source://phlex//lib/phlex/svg.rb#12
  def content_type; end

  # source://phlex//lib/phlex/svg.rb#16
  def filename; end
end

# source://phlex//lib/phlex/svg/standard_elements.rb#3
module Phlex::SVG::StandardElements
  extend ::Phlex::Elements

  # source://phlex//lib/phlex/elements.rb#43
  def _a(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _animate(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _animateMotion(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _animateTransform(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _circle(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _clipPath(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _defs(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _desc(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _discard(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _ellipse(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feBlend(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feColorMatrix(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feComponentTransfer(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feComposite(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feConvolveMatrix(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feDiffuseLighting(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feDisplacementMap(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feDistantLight(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feDropShadow(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feFlood(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feFuncA(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feFuncB(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feFuncG(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feFuncR(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feGaussianBlur(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feImage(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feMerge(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feMergeNode(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feMorphology(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feOffset(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _fePointLight(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feSpecularLighting(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feSpotLight(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feTile(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _feTurbulence(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _filter(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _foreignObject(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _g(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _image(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _line(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _linearGradient(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _marker(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _mask(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _metadata(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _mpath(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _path(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _pattern(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _polygon(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _polyline(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _radialGradient(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _rect(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _script(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _set(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _stop(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _style(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _svg(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _switch(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _symbol(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _text(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _textPath(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _title(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _tspan(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _use(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#43
  def _view(**attributes, &block); end

  # Outputs an `<a>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/a
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def a(**attributes, &block); end

  # Outputs an `<animate>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/animate
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def animate(**attributes, &block); end

  # Outputs an `<animateMotion>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/animateMotion
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def animateMotion(**attributes, &block); end

  # Outputs an `<animateTransform>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/animateTransform
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def animateTransform(**attributes, &block); end

  # Outputs a `<circle>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/circle
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def circle(**attributes, &block); end

  # Outputs a `<clipPath>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/clipPath
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def clipPath(**attributes, &block); end

  # Outputs a `<defs>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/defs
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def defs(**attributes, &block); end

  # Outputs a `<desc>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/desc
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def desc(**attributes, &block); end

  # Outputs a `<discard>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/discard
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def discard(**attributes, &block); end

  # Outputs an `<ellipse>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/ellipse
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def ellipse(**attributes, &block); end

  # Outputs an `<feBlend>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feBlend
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feBlend(**attributes, &block); end

  # Outputs an `<feColorMatrix>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feColorMatrix
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feColorMatrix(**attributes, &block); end

  # Outputs an `<feComponentTransfer>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feComponentTransfer
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feComponentTransfer(**attributes, &block); end

  # Outputs an `<feComposite>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feComposite
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feComposite(**attributes, &block); end

  # Outputs an `<feConvolveMatrix>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feConvolveMatrix
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feConvolveMatrix(**attributes, &block); end

  # Outputs an `<feDiffuseLighting>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feDiffuseLighting
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feDiffuseLighting(**attributes, &block); end

  # Outputs an `<feDisplacementMap>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feDisplacementMap
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feDisplacementMap(**attributes, &block); end

  # Outputs an `<feDistantLight>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feDistantLight
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feDistantLight(**attributes, &block); end

  # Outputs an `<feDropShadow>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feDropShadow
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feDropShadow(**attributes, &block); end

  # Outputs an `<feFlood>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feFlood
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feFlood(**attributes, &block); end

  # Outputs an `<feFuncA>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feFuncA
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feFuncA(**attributes, &block); end

  # Outputs an `<feFuncB>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feFuncB
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feFuncB(**attributes, &block); end

  # Outputs an `<feFuncG>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feFuncG
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feFuncG(**attributes, &block); end

  # Outputs an `<feFuncR>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feFuncR
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feFuncR(**attributes, &block); end

  # Outputs an `<feGaussianBlur>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feGaussianBlur
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feGaussianBlur(**attributes, &block); end

  # Outputs an `<feImage>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feImage
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feImage(**attributes, &block); end

  # Outputs an `<feMerge>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feMerge
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feMerge(**attributes, &block); end

  # Outputs an `<feMergeNode>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feMergeNode
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feMergeNode(**attributes, &block); end

  # Outputs an `<feMorphology>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feMorphology
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feMorphology(**attributes, &block); end

  # Outputs an `<feOffset>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feOffset
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feOffset(**attributes, &block); end

  # Outputs an `<fePointLight>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/fePointLight
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def fePointLight(**attributes, &block); end

  # Outputs an `<feSpecularLighting>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feSpecularLighting
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feSpecularLighting(**attributes, &block); end

  # Outputs an `<feSpotLight>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feSpotLight
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feSpotLight(**attributes, &block); end

  # Outputs an `<feTile>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feTile
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feTile(**attributes, &block); end

  # Outputs an `<feTurbulence>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feTurbulence
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def feTurbulence(**attributes, &block); end

  # Outputs a `<filter>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/filter
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def filter(**attributes, &block); end

  # Outputs a `<foreignObject>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/foreignObject
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def foreignObject(**attributes, &block); end

  # Outputs a `<g>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/g
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def g(**attributes, &block); end

  # Outputs an `<image>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/image
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def image(**attributes, &block); end

  # Outputs a `<line>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/line
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def line(**attributes, &block); end

  # Outputs a `<linearGradient>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/linearGradient
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def linearGradient(**attributes, &block); end

  # Outputs a `<marker>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/marker
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def marker(**attributes, &block); end

  # Outputs a `<mask>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/mask
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def mask(**attributes, &block); end

  # Outputs a `<metadata>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/metadata
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def metadata(**attributes, &block); end

  # Outputs an `<mpath>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/mpath
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def mpath(**attributes, &block); end

  # Outputs a `<path>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/path
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def path(**attributes, &block); end

  # Outputs a `<pattern>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/pattern
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def pattern(**attributes, &block); end

  # Outputs a `<polygon>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/polygon
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def polygon(**attributes, &block); end

  # Outputs a `<polyline>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/polyline
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def polyline(**attributes, &block); end

  # Outputs a `<radialGradient>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/radialGradient
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def radialGradient(**attributes, &block); end

  # Outputs a `<rect>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/rect
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def rect(**attributes, &block); end

  # Outputs a `<script>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/script
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def script(**attributes, &block); end

  # Outputs a `<set>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/set
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def set(**attributes, &block); end

  # Outputs a `<stop>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/stop
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def stop(**attributes, &block); end

  # Outputs a `<style>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/style
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def style(**attributes, &block); end

  # Outputs an `<svg>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/svg
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def svg(**attributes, &block); end

  # Outputs a `<switch>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/switch
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def switch(**attributes, &block); end

  # Outputs a `<symbol>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/symbol
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def symbol(**attributes, &block); end

  # Outputs a `<text>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/text
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def text(**attributes, &block); end

  # Outputs a `<textPath>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/textPath
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def textPath(**attributes, &block); end

  # Outputs a `<title>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/title
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def title(**attributes, &block); end

  # Outputs a `<tspan>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/tspan
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def tspan(**attributes, &block); end

  # Outputs a `<use>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/use
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def use(**attributes, &block); end

  # Outputs a `<view>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/view
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#43
  def view(**attributes, &block); end
end

# @api private
#
# source://phlex//lib/phlex/unbuffered.rb#4
class Phlex::Unbuffered < ::BasicObject
  # @api private
  # @return [Unbuffered] a new instance of Unbuffered
  #
  # source://phlex//lib/phlex/unbuffered.rb#5
  def initialize(object); end

  def __class__; end
  def __public_send__(*_arg0); end

  # Forward some methods to the original underlying method
  #
  # @api private
  #
  # source://phlex//lib/phlex/unbuffered.rb#39
  def call(*_arg0, **_arg1, &_arg2); end

  # @api private
  #
  # source://phlex//lib/phlex/unbuffered.rb#9
  def inspect; end

  # @api private
  #
  # source://phlex//lib/phlex/unbuffered.rb#24
  def method_missing(name, *args, **kwargs, &block); end

  # @api private
  #
  # source://phlex//lib/phlex/unbuffered.rb#47
  def public_send(*_arg0, **_arg1, &_arg2); end

  # @api private
  #
  # source://phlex//lib/phlex/unbuffered.rb#43
  def send(*_arg0, **_arg1, &_arg2); end

  private

  # @api private
  # @return [Boolean]
  #
  # source://phlex//lib/phlex/unbuffered.rb#20
  def respond_to_missing?(*_arg0, **_arg1, &_arg2); end
end
